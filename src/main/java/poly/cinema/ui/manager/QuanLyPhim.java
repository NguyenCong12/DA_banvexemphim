/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.cinema.ui.manager;

import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import poly.cinema.dao.QuanLyPhimDao;
import poly.cinema.dao.impl.QuanLyPhimDaoImpl;
import poly.cinema.entity.Phim;
import static poly.cinema.util.XAuth.user;
import poly.cinema.util.XDate;
import poly.cinema.util.XDialog;
import poly.cinema.util.XIcon;

/**
 *
 * @author NITRO
 */
public class QuanLyPhim extends javax.swing.JPanel implements QuanLyPhimController {

    /**
     * Creates new form QuanLyPhim
     */
    public QuanLyPhim() {
        initComponents();
        open();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTrangThai = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhim = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTenPhim = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTheLoai = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtThoiLuong = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMoTa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNgayKhoiChieu = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rdoDangChieu = new javax.swing.JRadioButton();
        rdoSapChieu = new javax.swing.JRadioButton();
        rdoNgungChieu = new javax.swing.JRadioButton();
        lblAnh = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1110, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1110, 720));

        jScrollPane1.setBackground(new java.awt.Color(248, 248, 248));

        tblPhim.setAutoCreateRowSorter(true);
        tblPhim.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã phim", "Tên phim", "Thể loại", "Thời lượng", "Mô tả", "Ngày khởi chiếu", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPhim.setGridColor(new java.awt.Color(0, 0, 0));
        tblPhim.setShowGrid(true);
        tblPhim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhimMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhim);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setMaximumSize(new java.awt.Dimension(1110, 720));
        jPanel1.setPreferredSize(new java.awt.Dimension(1110, 720));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Tên phim: ");

        txtTenPhim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenPhimActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Thể loại: ");

        txtTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTheLoaiActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Thời lượng");

        txtThoiLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThoiLuongActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Mô tả:");

        txtMoTa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMoTaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Ngày khởi chiếu:");

        txtNgayKhoiChieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayKhoiChieuActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Trạng thái: ");

        btgTrangThai.add(rdoDangChieu);
        rdoDangChieu.setText("Đang chiếu");

        btgTrangThai.add(rdoSapChieu);
        rdoSapChieu.setText("Sắp chiếu");

        btgTrangThai.add(rdoNgungChieu);
        rdoNgungChieu.setText("Ngưng chiếu");

        lblAnh.setText("jLabel8");
        lblAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhMouseClicked(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setText("Thêm");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton6.setText("Sửa");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton7.setText("xóa");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton8.setText("Làm mới");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMoTa, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                    .addComponent(txtTenPhim)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTheLoai))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayKhoiChieu, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtThoiLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(rdoDangChieu)
                        .addGap(17, 17, 17)
                        .addComponent(rdoSapChieu)
                        .addGap(18, 18, 18)
                        .addComponent(rdoNgungChieu)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6)))
                        .addGap(163, 163, 163))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtThoiLuong)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTenPhim)
                        .addComponent(txtNgayKhoiChieu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTheLoai)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdoDangChieu)
                                    .addComponent(rdoSapChieu)
                                    .addComponent(rdoNgungChieu))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel7.setText("QUẢN LÝ PHIM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(442, 442, 442)
                        .addComponent(jLabel7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1039, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1039, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel7)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 730));
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenPhimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenPhimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenPhimActionPerformed

    private void txtThoiLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThoiLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThoiLuongActionPerformed

    private void txtMoTaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMoTaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMoTaActionPerformed

    private void txtNgayKhoiChieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayKhoiChieuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgayKhoiChieuActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed

    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void txtTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTheLoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTheLoaiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed

    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblPhimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhimMouseClicked
        int row = tblPhim.getSelectedRow();
        if (row >= 0) {
            Phim phim = items.get(row);
            setForm(phim);
        }
    }//GEN-LAST:event_tblPhimMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        clear();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        create();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        update();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        delete();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void lblAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhMouseClicked
        chooseFile();
    }//GEN-LAST:event_lblAnhMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTrangThai;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JRadioButton rdoDangChieu;
    private javax.swing.JRadioButton rdoNgungChieu;
    private javax.swing.JRadioButton rdoSapChieu;
    private javax.swing.JTable tblPhim;
    private javax.swing.JTextField txtMoTa;
    private javax.swing.JTextField txtNgayKhoiChieu;
    private javax.swing.JTextField txtTenPhim;
    private javax.swing.JTextField txtTheLoai;
    private javax.swing.JTextField txtThoiLuong;
    // End of variables declaration//GEN-END:variables

    QuanLyPhimDao dao = new QuanLyPhimDaoImpl();
    List<Phim> items = new ArrayList<>();

    @Override
    public void open() {
        fillToTable();
        clear();
    }

    private String getTrangThai() {
        if (rdoDangChieu.isSelected()) {
            return "Đang chiếu";
        }
        if (rdoNgungChieu.isSelected()) {
            return "Ngừng chiếu";
        }
        if (rdoSapChieu.isSelected()) {
            return "Sắp chiếu";
        }
        return null; // ❌ Nếu không chọn gì => null => lỗi CHECK constraint
    }

    @Override
    public Phim getForm() {
        Phim p = new Phim();
        p.setTenPhim(txtTenPhim.getText());
        p.setTheLoai(txtTheLoai.getText());
        try {
            p.setThoiLuong(Integer.parseInt(txtThoiLuong.getText()));
        } catch (NumberFormatException e) {
            XDialog.alert("Thời lượng không hợp lệ!");
            return null;
        }
        p.setMoTa(txtMoTa.getText());

        // Ngày chiếu kiểm tra định dạng và ngày
        Date ngayChieu = XDate.parse(txtNgayKhoiChieu.getText().trim(), "dd/MM/yyyy");
        if (ngayChieu == null) {
            XDialog.alert("Ngày chiếu không đúng định dạng (dd/MM/yyyy).");
            return null;
        }
        Date today = new Date();
        if (ngayChieu.before(today)) {
            XDialog.alert("Ngày chiếu không được nhỏ hơn ngày hôm nay.");
            return null;
        }
        p.setNgayKhoiChieu(ngayChieu);

        p.setTrangThai(getTrangThai());
        String photoName = lblAnh.getToolTipText();
        p.setHinhAnh(photoName != null ? photoName : null);
        return p;
    }

    @Override
    public void setForm(Phim entity) {
        txtTenPhim.setText(entity.getTenPhim());
        txtTheLoai.setText(entity.getTheLoai());
        txtThoiLuong.setText(String.valueOf(entity.getThoiLuong()));
        txtMoTa.setText(entity.getMoTa());
        txtNgayKhoiChieu.setText(XDate.format(entity.getNgayKhoiChieu(), "dd/MM/yyyy"));

        switch (entity.getTrangThai()) {
            case "Đang chiếu" ->
                rdoDangChieu.setSelected(true);
            case "Ngừng chiếu" ->
                rdoNgungChieu.setSelected(true);
            case "Sắp chiếu" ->
                rdoSapChieu.setSelected(true);
        }

        // Hiển thị hình ảnh nếu tồn tại
        String hinh = entity.getHinhAnh();
        if (hinh != null) {
            File imageFile = new File("images", hinh);
            if (imageFile.exists()) {
                lblAnh.setToolTipText(hinh); // dùng để lưu lại tên file
                XIcon.setIcon(lblAnh, imageFile); // hiển thị icon
            } else {
                lblAnh.setToolTipText(null);
                lblAnh.setIcon(null);
            }
        } else {
            lblAnh.setToolTipText(null);
            lblAnh.setIcon(null);
        }
    }

    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblPhim.getModel();
        model.setRowCount(0);
        items = dao.findAll();

        for (Phim p : items) {
            model.addRow(new Object[]{
                p.getMaPhim(), p.getTenPhim(), p.getTheLoai(), p.getThoiLuong(),
                p.getMoTa(), XDate.format(p.getNgayKhoiChieu(), "dd/MM/yyyy"),
                p.getTrangThai(), p.getHinhAnh()
            });
        }
    }

    @Override
    public void create() {
        Phim phim = getForm();
        if (phim == null) {
            return;
        }
        dao.create(phim);
        fillToTable();
        clear();
        XDialog.alert("Thêm mới thành công!");
    }

    @Override
    public void update() {
        int row = tblPhim.getSelectedRow();
        if (row < 0) {
            XDialog.alert("Vui lòng chọn phim để cập nhật.");
            return;
        }
        Phim phim = getForm();
        if (phim == null) {
            return;
        }

        phim.setMaPhim((Integer) tblPhim.getValueAt(row, 0));
        dao.update(phim);
        fillToTable();
        XDialog.alert("Cập nhật thành công!");
    }

    @Override
    public void delete() {
        int row = tblPhim.getSelectedRow();
        if (row < 0) {
            XDialog.alert("Vui lòng chọn phim để xóa.");
            return;
        }
        int id = (Integer) tblPhim.getValueAt(row, 0);
        dao.deleteById(id);
        fillToTable();
        clear();
        XDialog.alert("Xóa thành công!");
    }

    @Override
    public void clear() {
        txtTenPhim.setText("");
        txtTheLoai.setText("");
        txtThoiLuong.setText("");
        txtMoTa.setText("");
        txtNgayKhoiChieu.setText("");
        rdoDangChieu.setSelected(true);
        lblAnh.setIcon(null);
        lblAnh.setToolTipText(null);
        tblPhim.clearSelection();
    }

    @Override
    public void setEditable(boolean editable) {
        txtTenPhim.setEditable(editable);
        txtTheLoai.setEditable(editable);
        txtThoiLuong.setEditable(editable);
        txtMoTa.setEditable(editable);
        txtNgayKhoiChieu.setEditable(editable);
        rdoDangChieu.setEnabled(editable);
        rdoNgungChieu.setEnabled(editable);
        rdoSapChieu.setEnabled(editable);
        // Nếu có nút hoặc hình ảnh thì xử lý thêm ở đây
    }

    @Override
    public void moveFirst() {
        if (items.isEmpty()) {
            return;
        }
        tblPhim.setRowSelectionInterval(0, 0);
        setForm(items.get(0));
    }

    @Override
    public void movePrevious() {
        int row = tblPhim.getSelectedRow();
        if (row > 0) {
            row--;
            tblPhim.setRowSelectionInterval(row, row);
            setForm(items.get(row));
        }
    }

    @Override
    public void moveNext() {
        int row = tblPhim.getSelectedRow();
        if (row < items.size() - 1) {
            row++;
            tblPhim.setRowSelectionInterval(row, row);
            setForm(items.get(row));
        }
    }

    @Override
    public void moveLast() {
        int row = items.size() - 1;
        tblPhim.setRowSelectionInterval(row, row);
        setForm(items.get(row));
    }

    @Override
    public void moveTo(int rowIndex) {
        if (rowIndex >= 0 && rowIndex < items.size()) {
            tblPhim.setRowSelectionInterval(rowIndex, rowIndex);
            setForm(items.get(rowIndex));
        }
    }

    @Override
    public void selectTimeRange() {
//        Date tuNgay = txtTuNgay.getDate();
//        Date denNgay = txtDenNgay.getDate();
//
//        if (tuNgay == null || denNgay == null) {
//            XDialog.alert("Vui lòng chọn đầy đủ khoảng ngày.");
//            return;
//        }
//
//        DefaultTableModel model = (DefaultTableModel) tblPhim.getModel();
//        model.setRowCount(0);
//        for (Phim p : dao.findAll()) {
//            Date ngayKhoiChieu = p.getNgayKhoiChieu();
//            if (!ngayKhoiChieu.before(tuNgay) && !ngayKhoiChieu.after(denNgay)) {
//                model.addRow(new Object[]{
//                    p.getMaPhim(), p.getTenPhim(), p.getTheLoai(), p.getThoiLuong(),
//                    p.getMoTa(), XDate.format(p.getNgayKhoiChieu(), "dd/MM/yyyy"),
//                    p.getTrangThai(), p.getHinhAnh()
//                });
//            }
//        }
    }

    @Override
    public void edit() {
        int row = tblPhim.getSelectedRow();
        if (row < 0) {
            XDialog.alert("Vui lòng chọn phim để sửa.");
            return;
        }
        setForm(items.get(row));
        tblPhim.setRowSelectionInterval(row, row);
    }

    private final JFileChooser fileChooser = new JFileChooser();

    public void chooseFile() {
        fileChooser.setFileFilter(new FileNameExtensionFilter("Image files", "jpg", "png", "jpeg", "gif"));
        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            File file = XIcon.copyTo(selectedFile, "images"); // đảm bảo sao chép đúng thư mục
            if (file != null) {
                lblAnh.setToolTipText(file.getName()); // lưu tên ảnh
                XIcon.setIcon(lblAnh, file);           // hiển thị ảnh
            }
        }
    }

}
