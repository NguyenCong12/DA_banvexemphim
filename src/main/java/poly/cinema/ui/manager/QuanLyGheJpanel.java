/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.cinema.ui.manager;

import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import poly.cinema.dao.QuanLyGheDao;
import poly.cinema.dao.impl.QuanLyGheDaoImpl;
import poly.cinema.dao.impl.QuanLyPhongChieuDaoImpl;
import poly.cinema.entity.PhongChieu;
import poly.cinema.entity.QuanLyGhe;
import poly.cinema.util.XDialog;

/**
 *
 * @author Admin
 */
public class QuanLyGheJpanel extends javax.swing.JPanel implements QuanLyGheController {

    /**
     * Creates new form QuanLyGheJpanel
     */
    public QuanLyGheJpanel() {
        initComponents();
        open();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtSoGhe = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cboPhongChieu = new javax.swing.JComboBox<>();
        cboLoaiGhe = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtSoHang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSoCot = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGhe = new javax.swing.JTable();
        btnSua = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1110, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ GHẾ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(438, 6, 291, 88));

        jPanel3.setBackground(new java.awt.Color(212, 212, 212));
        jPanel3.setPreferredSize(new java.awt.Dimension(111, 111));

        jLabel5.setText("Số ghế");

        txtSoGhe.setEditable(false);
        txtSoGhe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoGheActionPerformed(evt);
            }
        });

        jLabel7.setText("Mã phòng chiếu");

        cboPhongChieu.setEditable(true);
        cboPhongChieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPhongChieuActionPerformed(evt);
            }
        });

        cboLoaiGhe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thường", "Vip", " " }));
        cboLoaiGhe.setToolTipText("");
        cboLoaiGhe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiGheActionPerformed(evt);
            }
        });

        jLabel3.setText("Số hàng");

        txtSoHang.setEditable(false);
        txtSoHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoHangActionPerformed(evt);
            }
        });

        jLabel4.setText("Số cột");

        txtSoCot.setEditable(false);
        txtSoCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoCotActionPerformed(evt);
            }
        });

        jLabel9.setText("Loại ghế");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSoHang)
                        .addComponent(cboLoaiGhe, 0, 180, Short.MAX_VALUE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboPhongChieu, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(92, 92, 92)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoGhe, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoCot, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(71, 244, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSoHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(29, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSoCot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboLoaiGhe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboPhongChieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(40, 102, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSoGhe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGap(52, 52, 52))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 1040, 210));

        tblGhe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã ghế", "Số ghế", "Hàng", "Cột", "Loại ghế", "Mã phòng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGhe.setRowHeight(25);
        tblGhe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGheMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblGhe);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 1040, 240));

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 610, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void txtSoGheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoGheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoGheActionPerformed

    private void txtSoHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoHangActionPerformed

    private void txtSoCotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoCotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoCotActionPerformed

    private void tblGheMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGheMouseClicked
        int row = tblGhe.getSelectedRow();
        if (row >= 0) {
            QuanLyGhe ghe = items.get(row);
            setForm(ghe);
            updateButtonState();
        }
    }//GEN-LAST:event_tblGheMouseClicked

    private void cboLoaiGheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiGheActionPerformed

    }//GEN-LAST:event_cboLoaiGheActionPerformed

    private void cboPhongChieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPhongChieuActionPerformed
        cboPhongChieu.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                fillToTable();
            }
        });
    }//GEN-LAST:event_cboPhongChieuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JComboBox<String> cboLoaiGhe;
    private javax.swing.JComboBox<String> cboPhongChieu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblGhe;
    private javax.swing.JTextField txtSoCot;
    private javax.swing.JTextField txtSoGhe;
    private javax.swing.JTextField txtSoHang;
    // End of variables declaration//GEN-END:variables

    QuanLyGheDao dao = new QuanLyGheDaoImpl();
    List<QuanLyGhe> items = new ArrayList<>();
    
    private void updateButtonState() {
    boolean isRowSelected = tblGhe.getSelectedRow() >= 0;

    btnSua.setEnabled(isRowSelected);
}
    @Override
    public void open() {
        addListeners();
        fillComboBoxPhong();
        fillComboBoxLoaiGhe(); // ✅ Thêm dòng này
        fillToTable();
        clear();
    }

    private void addListeners() {
        cboPhongChieu.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                fillToTable();
            }
        });
    }

    private void fillComboBoxLoaiGhe() {
        cboLoaiGhe.removeAllItems();
        cboLoaiGhe.addItem("Thường");
        cboLoaiGhe.addItem("VIP");
    }

    private void fillComboBoxPhong() {
        cboPhongChieu.removeAllItems();
        List<String> dsPhong = dao.getAllMaPhong();
        for (String maPhong : dsPhong) {
            cboPhongChieu.addItem(maPhong);
        }
    }

    @Override
    public QuanLyGhe getForm() {
        QuanLyGhe ghe = new QuanLyGhe();
        String hang = txtSoHang.getText().trim();
        String cotText = txtSoCot.getText().trim();

        ghe.setHang(hang);
        int cot;
        try {
            cot = Integer.parseInt(cotText);
            ghe.setCot(cot);
        } catch (NumberFormatException e) {
            XDialog.alert("Cột phải là số nguyên!");
            return null;
        }

        String soGhe = txtSoGhe.getText().trim();
        if (soGhe.isEmpty()) {
            soGhe = hang + cot;
        }
        ghe.setSoGhe(soGhe);

        ghe.setLoaiGhe((String) cboLoaiGhe.getSelectedItem());
        ghe.setMaPhong((String) cboPhongChieu.getSelectedItem());
        return ghe;
    }

    @Override
    public void setForm(QuanLyGhe ghe) {
        txtSoGhe.setText(ghe.getSoGhe());
        txtSoHang.setText(ghe.getHang());
        txtSoCot.setText(String.valueOf(ghe.getCot()));
        cboLoaiGhe.setSelectedItem(ghe.getLoaiGhe());
        cboPhongChieu.setSelectedItem(ghe.getMaPhong());
    }

    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblGhe.getModel();
        model.setRowCount(0);
        String maPhong = (String) cboPhongChieu.getSelectedItem();
        if (maPhong != null) {
            items = dao.findByPhong(maPhong);
            for (QuanLyGhe ghe : items) {
                model.addRow(new Object[]{
                    ghe.getMaGhe(),
                    ghe.getSoGhe(),
                    ghe.getHang(),
                    ghe.getCot(),
                    ghe.getLoaiGhe(),
                    ghe.getMaPhong(),
                    false
                });
            }
        }
        updateButtonState();
    }

    @Override
    public void create() {
        QuanLyGhe ghe = getForm();
        if (ghe == null) {
            return;
        }

        QuanLyGhe existed = dao.findBySoGheAndPhong(ghe.getSoGhe(), ghe.getMaPhong());
        if (existed != null) {
            XDialog.alert("Ghế " + ghe.getSoGhe() + " đã tồn tại trong phòng " + ghe.getMaPhong() + "!");
            return;
        }

        dao.create(ghe);
        fillToTable();
        clear();
        XDialog.alert("Thêm ghế thành công!");
    }

    @Override
    public void update() {
        int row = tblGhe.getSelectedRow();
        if (row < 0) {
            XDialog.alert("Vui lòng chọn ghế để cập nhật!");
            return;
        }

        QuanLyGhe ghe = getForm();
        if (ghe == null) {
            return;
        }

        ghe.setMaGhe((Integer) tblGhe.getValueAt(row, 0));
        dao.update(ghe);
        fillToTable();
        XDialog.alert("Cập nhật ghế thành công!");
    }

    @Override
    public void delete() {
        int row = tblGhe.getSelectedRow();
        if (row < 0) {
            XDialog.alert("Vui lòng chọn ghế để xóa!");
            return;
        }
        int maGhe = (Integer) tblGhe.getValueAt(row, 0);
        dao.deleteById(maGhe);
        fillToTable();
        clear();
        XDialog.alert("Xóa ghế thành công!");
    }

    @Override
    public void clear() {
        txtSoGhe.setText("");
        txtSoHang.setText("");
        txtSoCot.setText("");

        if (cboLoaiGhe.getItemCount() > 0) {
            cboLoaiGhe.setSelectedIndex(0);
        }
        if (cboPhongChieu.getItemCount() > 0) {
            cboPhongChieu.setSelectedIndex(0);
        }

        tblGhe.clearSelection();
        
        updateButtonState();
    }

    @Override
    public void edit() {
        int row = tblGhe.getSelectedRow();
        if (row >= 0) {
            QuanLyGhe ghe = items.get(row);
            setForm(ghe);
            tblGhe.setRowSelectionInterval(row, row);
        } else {
            XDialog.alert("Vui lòng chọn ghế để chỉnh sửa.");
        }
    }

    @Override
    public void setEditable(boolean editable) {
        txtSoGhe.setEditable(editable);
        txtSoHang.setEditable(editable);
        txtSoCot.setEditable(editable);
        cboLoaiGhe.setEnabled(editable);
        cboPhongChieu.setEnabled(editable);
    }

    @Override
    public void moveFirst() {
        if (!items.isEmpty()) {
            moveTo(0);
        }
    }

    @Override
    public void movePrevious() {
        int row = tblGhe.getSelectedRow();
        if (row > 0) {
            moveTo(row - 1);
        }
    }

    @Override
    public void moveNext() {
        int row = tblGhe.getSelectedRow();
        if (row < items.size() - 1) {
            moveTo(row + 1);
        }
    }

    @Override
    public void moveLast() {
        if (!items.isEmpty()) {
            moveTo(items.size() - 1);
        }
    }

    @Override
    public void moveTo(int rowIndex) {
        if (rowIndex >= 0 && rowIndex < items.size()) {
            QuanLyGhe ghe = items.get(rowIndex);
            setForm(ghe);
            tblGhe.setRowSelectionInterval(rowIndex, rowIndex);
        }
    }

    @Override
    public void selectTimeRange() {
        // Không áp dụng
    }

}
