/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.cinema.ui.manager;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import poly.cinema.dao.UserDAO;
import poly.cinema.dao.impl.UserDAOImpl;
import poly.cinema.entity.User;
import static poly.cinema.util.XAuth.user;
import poly.cinema.util.XIcon;

/**
 *
 * @author BA HAO
 */
public class QuanLiNhanVien extends javax.swing.JPanel implements QuanLiNhanVienController {

    /**
     * Creates new form QuanLiNhanVien
     */
    public QuanLiNhanVien() {
        initComponents();
        this.open();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgVaitro = new javax.swing.ButtonGroup();
        btgTrangthai = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQLnhanvien = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblAnh = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtTennhanvien = new javax.swing.JTextField();
        txtMatkhau = new javax.swing.JTextField();
        txtSodienthoai = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        rdoQuanLy = new javax.swing.JRadioButton();
        rdoNhanVien = new javax.swing.JRadioButton();
        rdoHoatDong = new javax.swing.JRadioButton();
        rdoDaNgung = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnNhapmoi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(1110, 720));

        tblQLnhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên nhân viên", "Mật khẩu", "Email", "Số điện thoại", "Vai trò", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQLnhanvien.setGridColor(new java.awt.Color(0, 0, 0));
        tblQLnhanvien.setRowHeight(25);
        tblQLnhanvien.setShowGrid(true);
        tblQLnhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLnhanvienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQLnhanvien);

        jPanel1.setBackground(new java.awt.Color(212, 212, 212));
        jPanel1.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N

        lblAnh.setText("ảnh");
        lblAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhMouseClicked(evt);
            }
        });

        jLabel10.setText("Tên nhân viên");

        jLabel11.setText("Trạng thái");

        jLabel12.setText("Mật khẩu");

        jLabel13.setText("Vai trò");

        jLabel15.setText("Số điện thoại");

        jLabel16.setText("Email");

        txtTennhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTennhanvienActionPerformed(evt);
            }
        });

        txtMatkhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatkhauActionPerformed(evt);
            }
        });

        txtSodienthoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSodienthoaiActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        btgVaitro.add(rdoQuanLy);
        rdoQuanLy.setText("Quản lí");

        btgVaitro.add(rdoNhanVien);
        rdoNhanVien.setText("Nhân viên");

        btgTrangthai.add(rdoHoatDong);
        rdoHoatDong.setText("Hoạt động");

        btgTrangthai.add(rdoDaNgung);
        rdoDaNgung.setText("Đã ngừng");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(txtTennhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(txtMatkhau, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15)
                            .addComponent(jLabel11)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtSodienthoai, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rdoQuanLy)
                                        .addComponent(rdoHoatDong))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rdoDaNgung)
                                        .addComponent(rdoNhanVien)))))
                        .addGap(172, 172, 172))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTennhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSodienthoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoQuanLy)
                            .addComponent(rdoNhanVien))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMatkhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdoHoatDong)
                                .addComponent(rdoDaNgung)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThem.setText("Thêm ");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnNhapmoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnNhapmoi.setText("Nhập mới");
        btnNhapmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapmoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnNhapmoi)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNhapmoi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel1.setText("QUẢN LÝ NHÂN VIÊN");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(413, 413, 413))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1122, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTennhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTennhanvienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTennhanvienActionPerformed

    private void txtMatkhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatkhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatkhauActionPerformed

    private void txtSodienthoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSodienthoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSodienthoaiActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        this.create();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnNhapmoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapmoiActionPerformed
        // TODO add your handling code here:
        this.clear();
    }//GEN-LAST:event_btnNhapmoiActionPerformed

    private void tblQLnhanvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLnhanvienMouseClicked
        int row = tblQLnhanvien.getSelectedRow();
        if (row >= 0) {
            String email = tblQLnhanvien.getValueAt(row, 2).toString(); // Cột 2 là email
            User nhanVien = dao.findByEmail(email); // Tìm theo email, không dùng ID nữa

            if (nhanVien != null) {
                setForm(nhanVien);
                setEditable(true);
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên!");
            }
        }
    }//GEN-LAST:event_tblQLnhanvienMouseClicked

    private void lblAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhMouseClicked
        chooseFile();
    }//GEN-LAST:event_lblAnhMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTrangthai;
    private javax.swing.ButtonGroup btgVaitro;
    private javax.swing.JButton btnNhapmoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JRadioButton rdoDaNgung;
    private javax.swing.JRadioButton rdoHoatDong;
    private javax.swing.JRadioButton rdoNhanVien;
    private javax.swing.JRadioButton rdoQuanLy;
    private javax.swing.JTable tblQLnhanvien;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMatkhau;
    private javax.swing.JTextField txtSodienthoai;
    private javax.swing.JTextField txtTennhanvien;
    // End of variables declaration//GEN-END:variables

    UserDAO dao = new UserDAOImpl();
    List<User> items = new ArrayList<>();

    @Override
    public void open() {
        this.setVisible(true);
        clear();
        fillToTable();
    }

    @Override
    public void setForm(User entity) {
        txtTennhanvien.setText(entity.getTen_nd());
        txtMatkhau.setText(entity.getMat_khau());
        txtSodienthoai.setText(entity.getSdt());

        String hinh = entity.getAnh_dai_dien(); // đổi tên field

        if (hinh != null && !hinh.isBlank()) {
            File imageFile = new File("images", hinh);
            if (imageFile.exists()) {
                lblAnh.setToolTipText(hinh);
                XIcon.setIcon(lblAnh, imageFile); // hiển thị hình ảnh
            } else {
                lblAnh.setToolTipText(null);
                lblAnh.setIcon(null);
            }
        } else {
            lblAnh.setToolTipText(null);
            lblAnh.setIcon(null);
        }
        txtEmail.setText(entity.getEmail());
        rdoHoatDong.setSelected(entity.isHoat_dong());
        rdoDaNgung.setSelected(!entity.isHoat_dong());

        rdoQuanLy.setSelected(entity.isVai_tro());
        rdoNhanVien.setSelected(!entity.isVai_tro());
    }

    @Override
    public User getForm() {
        User user = new User();
        int row = tblQLnhanvien.getSelectedRow();
        if (row >= 0) {
            // Lấy lại ma_nv từ entity cũ
            String email = tblQLnhanvien.getValueAt(row, 2).toString();
            User existing = dao.findByEmail(email);
            user.setMa_nd(existing.getMa_nd());
        }

        user.setTen_nd(txtTennhanvien.getText());
        user.setEmail(txtEmail.getText());
        user.setMat_khau(txtMatkhau.getText());
        user.setSdt(txtSodienthoai.getText());
        user.setVai_tro(rdoQuanLy.isSelected());
        user.setHoat_dong(rdoHoatDong.isSelected());
        String anh = lblAnh.getToolTipText();
        user.setAnh_dai_dien(anh == null ? "" : anh);
        return user;
    }

    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblQLnhanvien.getModel();
        model.setRowCount(0);

        items = dao.findAll();
        for (User item : items) {
            Object[] rowData = {
                item.getTen_nd(),
                item.getMat_khau(),
                item.getEmail(),
                item.getSdt(),
                item.isVai_tro() ? "Quản lý" : "Nhân viên",
                item.isHoat_dong() ? "Hoạt động" : "Tạm dừng",
                false
            };
            model.addRow(rowData);
        }
    }

    @Override
    public void edit() {
        int row = tblQLnhanvien.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để chỉnh sửa!");
            return;
        }
        String email = tblQLnhanvien.getValueAt(row, 2).toString();
        User entity = dao.findByEmail(email);
        if (entity != null) {
            this.setForm(entity);
            this.setEditable(true);
        }
    }

    @Override
    public void create() {
        String tennhanvien = txtTennhanvien.getText().trim();
        String matkhau = txtMatkhau.getText().trim();
        String sodienthoai = txtSodienthoai.getText().trim();
        String taikhoan = txtEmail.getText().trim();
        String anh = lblAnh.getToolTipText();

        if (tennhanvien.isEmpty() || matkhau.isEmpty() || taikhoan.isEmpty() || sodienthoai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
            return;
        }
        if (anh == null || anh.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ảnh!");
            return;
        }
        if (tennhanvien.length() < 3) {
            JOptionPane.showMessageDialog(this, "Tên đăng nhập phải có ít nhất 3 ký tự!");
            return;
        }
        if (!rdoNhanVien.isSelected() && !rdoQuanLy.isSelected()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn vai trò!");
            return;
        }
        if (!rdoHoatDong.isSelected() && !rdoDaNgung.isSelected()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn trạng thái!");
            return;
        }
        if (dao.findByEmail(taikhoan) != null) {
            JOptionPane.showMessageDialog(this, "Tài khoản đã tồn tại!");
            return;
        }

        try {
            User entity = getForm();
            dao.create(entity);
            fillToTable();
            clear();
            JOptionPane.showMessageDialog(this, "Thêm mới thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Thêm mới thất bại!");
        }
    }

    @Override
    public void update() {
        int row = tblQLnhanvien.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để cập nhật!");
            return;
        }
        User newUser = getForm();
        String email = tblQLnhanvien.getValueAt(row, 2).toString();
        User oldUser = dao.findByEmail(email);

        if (oldUser != null && newUser.equals(oldUser)) {
            JOptionPane.showMessageDialog(this, "Không có thay đổi nào để cập nhật!");
            return;
        }

        try {
            dao.update(newUser);
            fillToTable();
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cập nhật thất bại!");
        }
    }

    @Override
    public void delete() {
        int row = tblQLnhanvien.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa!");
            return;
        }
        int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            String email = tblQLnhanvien.getValueAt(row, 2).toString();
            dao.deleteById(email);
            fillToTable();
            clear();
            JOptionPane.showMessageDialog(this, "Xóa thành công!");
        }
    }

    @Override
    public void clear() {
        this.setForm(new User());
        setEditable(false);
        lblAnh.setIcon(null);
    }

    @Override
    public void setEditable(boolean editable) {
        btnThem.setEnabled(!editable);
        btnSua.setEnabled(editable);
        btnXoa.setEnabled(editable);
    }

    @Override
    public void moveFirst() {
        if (!items.isEmpty()) {
            tblQLnhanvien.setRowSelectionInterval(0, 0);
            edit();
        }
    }

    @Override
    public void movePrevious() {
        int row = tblQLnhanvien.getSelectedRow();
        if (row > 0) {
            tblQLnhanvien.setRowSelectionInterval(row - 1, row - 1);
            edit();
        }
    }

    @Override
    public void moveNext() {
        int row = tblQLnhanvien.getSelectedRow();
        if (row < tblQLnhanvien.getRowCount() - 1) {
            tblQLnhanvien.setRowSelectionInterval(row + 1, row + 1);
            edit();
        }
    }

    @Override
    public void moveLast() {
        int rowCount = tblQLnhanvien.getRowCount();
        if (rowCount > 0) {
            tblQLnhanvien.setRowSelectionInterval(rowCount - 1, rowCount - 1);
            edit();
        }
    }

    @Override
    public void moveTo(int rowIndex) {
        if (rowIndex >= 0 && rowIndex < tblQLnhanvien.getRowCount()) {
            tblQLnhanvien.setRowSelectionInterval(rowIndex, rowIndex);
            edit();
        }
    }

    @Override
    public void selectTimeRange() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    private final JFileChooser fileChooser = new JFileChooser();

    public void chooseFile() {
        fileChooser.setFileFilter(new FileNameExtensionFilter("Image files", "jpg", "png", "jpeg", "gif"));
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            File file = XIcon.copyTo(selectedFile, "images"); // copy về thư mục "images"
            if (file != null) {
                lblAnh.setToolTipText(file.getName()); // gắn tên ảnh vào tooltip
                XIcon.setIcon(lblAnh, file);           // hiển thị ảnh lên label
            }
        }
    }

}
