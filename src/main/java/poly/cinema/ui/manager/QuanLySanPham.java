/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.cinema.ui.manager;

import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import poly.cinema.dao.impl.QuanLySanPhamDAOImpl;
import poly.cinema.entity.SanPham;

/**
 *
 * @author ADMIN
 */
public class QuanLySanPham extends javax.swing.JPanel implements QuanLySanPhamController {

    /**
     * Creates new form QuanLySanPham
     */
    public QuanLySanPham() {
        initComponents();
        initListeners();
        this.open();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTrangThai = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        txtTenHang = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        lblAnh = new javax.swing.JLabel();
        cboLoai = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        rdoCon = new javax.swing.JRadioButton();
        rdoHet = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1110, 720));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hàng", "Tên hàng", "Loại", "Giá", "Trạng thái", "Ảnh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.setGridColor(new java.awt.Color(0, 0, 0));
        tblSanPham.setRowHeight(25);
        tblSanPham.setShowGrid(true);
        jScrollPane1.setViewportView(tblSanPham);

        jPanel1.setBackground(new java.awt.Color(212, 212, 212));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel2.setText("Loại hàng");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Giá");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Tên hàng");

        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoa.setText("xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        lblAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhMouseClicked(evt);
            }
        });

        cboLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel1.setText("Trang thái");

        btgTrangThai.add(rdoCon);
        rdoCon.setText("Còn hàng");

        btgTrangThai.add(rdoHet);
        rdoHet.setText("Hết hàng");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Ảnh sản phẩm");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtTenHang, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtGia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(26, 26, 26)
                        .addComponent(btnSua)
                        .addGap(28, 28, 28)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLamMoi))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdoCon)
                                .addGap(27, 27, 27)
                                .addComponent(rdoHet)))))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTenHang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdoCon)
                                .addComponent(rdoHet))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel6.setText("QUẢN LÝ SẢN PHẨM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1002, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(410, 410, 410))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel6)
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed

    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void cboLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboLoaiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed

    }//GEN-LAST:event_btnXoaActionPerformed

    private void lblAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhMouseClicked
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            String fileName = file.getName();

            // Copy ảnh vào thư mục img/
            File dest = new File("img", fileName);
            try {
                Files.copy(file.toPath(), dest.toPath(), StandardCopyOption.REPLACE_EXISTING);
            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Lỗi khi sao chép ảnh!");
                return;
            }

            // Hiển thị ảnh vừa với khung
            ImageIcon icon = new ImageIcon(dest.getAbsolutePath());
            Image image = icon.getImage().getScaledInstance(
                    lblAnh.getWidth(), lblAnh.getHeight(), Image.SCALE_SMOOTH
            );
            lblAnh.setIcon(new ImageIcon(image));

            // Gán tên file ảnh để lưu vào DB
            lblAnh.setText(fileName);
        }
    }//GEN-LAST:event_lblAnhMouseClicked

    private final QuanLySanPhamDAOImpl dao = new QuanLySanPhamDAOImpl();
    private List<SanPham> list;
    private int index = -1;
    private boolean isCreating = false;

    @Override
    public void open() {
        fillToTable();
        this.loadLoaiHang();
        clear();
    }

    @Override
    public void setForm(SanPham sp) {
        txtTenHang.setText(sp.getTenSanPham());
        txtGia.setText(String.valueOf(sp.getGia()));
        cboLoai.setSelectedItem(sp.getLoai());
        rdoCon.setSelected(sp.isTrangThai());
        rdoHet.setSelected(!sp.isTrangThai());

        String fileName = sp.getAnh();
        lblAnh.setText(fileName);

        if (fileName != null && !fileName.isEmpty()) {
            File imgFile = new File("img", fileName);
            if (imgFile.exists()) {
                ImageIcon icon = new ImageIcon(imgFile.getAbsolutePath());
                Image image = icon.getImage().getScaledInstance(
                        lblAnh.getWidth(), lblAnh.getHeight(), Image.SCALE_SMOOTH
                );
                lblAnh.setIcon(new ImageIcon(image));
            } else {
                lblAnh.setIcon(null);
            }
        } else {
            lblAnh.setIcon(null);
        }
    }

    @Override
    public SanPham getForm() {
        String ten = txtTenHang.getText().trim();
        String loai = (String) cboLoai.getSelectedItem();
        double gia = Double.parseDouble(txtGia.getText().trim());
        String anh = (lblAnh.getText() == null || lblAnh.getText().trim().isEmpty()) ? "" : lblAnh.getText().trim();
        boolean trangThai = rdoCon.isSelected();
        return new SanPham(null, ten, loai, gia, trangThai, anh);
    }

    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        list = dao.findAll();

        // Tạo đối tượng định dạng tiền Việt Nam
        NumberFormat currencyFormat = NumberFormat.getInstance(new Locale("vi", "VN"));

        for (SanPham sp : list) {
            String giaFormatted = currencyFormat.format(sp.getGia()) + " VNĐ";
            model.addRow(new Object[]{
                sp.getMaSanPham(),
                sp.getTenSanPham(),
                sp.getLoai(),
                giaFormatted, // giá đã định dạng
                sp.isTrangThai() ? "Còn hàng" : "Hết hàng",
                sp.getAnh()
            });
        }
    }

    @Override
    public void edit() {
        int row = tblSanPham.getSelectedRow();
        if (row >= 0) {
            String ma = tblSanPham.getValueAt(row, 0).toString();
            SanPham sp = dao.findById(ma);
            if (sp != null) {
                setForm(sp);
                index = row;
                updateButtonStates(true);
            }
        }
    }

    @Override
    public void create() {
        try {
            String ten = txtTenHang.getText().trim();
            String loai = (String) cboLoai.getSelectedItem();
            String giaStr = txtGia.getText().trim();
            String anh = lblAnh.getText().trim();

            // 1. Kiểm tra rỗng
            if (ten.isEmpty() || giaStr.isEmpty() || anh.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }

            // 2. Kiểm tra giá
            double gia;
            try {
                gia = Double.parseDouble(giaStr);
                if (gia <= 0) {
                    JOptionPane.showMessageDialog(this, "Giá phải lớn hơn 0!");
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "❌ Giá phải là số!");
                return;
            }

            // 3. Kiểm tra trùng tên
            List<SanPham> danhSach = dao.findAll();
            if (danhSach != null) {
                for (SanPham sp : danhSach) {
                    if (sp.getTenSanPham().equalsIgnoreCase(ten)) {
                        JOptionPane.showMessageDialog(this, "❌ Tên sản phẩm đã tồn tại!");
                        return;
                    }
                }
            }

            // 4. Tạo sản phẩm
            SanPham sp = new SanPham(null, ten, loai, gia, true, anh);
            isCreating = true;
            SanPham spMoi = dao.create(sp);
            if (spMoi != null && spMoi.getMaSanPham() != null) {
                fillToTable();
                clear();
                JOptionPane.showMessageDialog(this, "✔️ Thêm sản phẩm thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "❌ Không thể lấy ID sản phẩm mới!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "❌ Lỗi thêm sản phẩm: " + e.getMessage());
        } finally {
            isCreating = false;
        }
    }

    @Override
    public void update() {
        try {
            int row = tblSanPham.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm để cập nhật!");
                return;
            }

            String ma = tblSanPham.getValueAt(row, 0).toString();
            String ten = txtTenHang.getText().trim();
            String loai = (String) cboLoai.getSelectedItem();
            String giaStr = txtGia.getText().trim();
            String anh = lblAnh.getText().trim();
            boolean trangThai = rdoCon.isSelected();

            if (ten.isEmpty() || giaStr.isEmpty() || anh.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }

            double gia;
            try {
                gia = Double.parseDouble(giaStr);
                if (gia <= 0) {
                    JOptionPane.showMessageDialog(this, "Giá phải lớn hơn 0!");
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Giá phải là số hợp lệ!");
                return;
            }

            SanPham spCu = dao.findById(ma);
            if (spCu == null) {
                JOptionPane.showMessageDialog(this, "Sản phẩm không tồn tại!");
                return;
            }

            List<SanPham> danhSach = dao.findAll();
            if (danhSach != null) {
                for (SanPham sp : danhSach) {
                    if (sp.getTenSanPham().equalsIgnoreCase(ten)
                            && !sp.getMaSanPham().equals(ma)) {
                        JOptionPane.showMessageDialog(this, "Tên sản phẩm đã tồn tại ở sản phẩm khác!");
                        return;
                    }
                }
            }

            if (ten.equalsIgnoreCase(spCu.getTenSanPham())
                    && loai.equalsIgnoreCase(spCu.getLoai())
                    && gia == spCu.getGia()
                    && trangThai == spCu.isTrangThai()
                    && anh.equals(spCu.getAnh())) {
                JOptionPane.showMessageDialog(this, "Bạn chưa thay đổi thông tin nào để cập nhật!");
                return;
            }

            int confirm = JOptionPane.showConfirmDialog(this,
                    "Bạn chắc chắn muốn cập nhật sản phẩm này?",
                    "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            SanPham spMoi = new SanPham(ma, ten, loai, gia, trangThai, anh);
            dao.update(spMoi);
            fillToTable();
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
            this.clear();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cập nhật thất bại: " + e.getMessage());
        }
    }

    @Override
    public void delete() {
        try {
            int row = tblSanPham.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm cần xóa trong bảng!");
                return;
            }

            String ma = tblSanPham.getValueAt(row, 0).toString();

            int confirm = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn xóa sản phẩm này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                dao.deleteById(ma);
                fillToTable();
                clear();
                JOptionPane.showMessageDialog(this, "Xóa sản phẩm thành công!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Không thể xóa vì sản phẩm này đang được sử dụng!");
        }
    }

    @Override
    public void clear() {
        txtTenHang.setText("");
        txtGia.setText("");
        cboLoai.setSelectedIndex(0);
        lblAnh.setText("");
        lblAnh.setIcon(null);
        rdoCon.setSelected(true);
        index = -1;
        updateButtonStates(false);
    }

    @Override
    public void setEditable(boolean editable) {
        txtTenHang.setEditable(editable);
        txtGia.setEditable(editable);
        cboLoai.setEnabled(editable);
        rdoCon.setEnabled(editable);
        rdoHet.setEnabled(editable);
    }

    @Override
    public void moveFirst() {
        moveTo(0);
    }

    @Override
    public void movePrevious() {
        if (index > 0) {
            moveTo(index - 1);
        }
    }

    @Override
    public void moveNext() {
        if (index < list.size() - 1) {
            moveTo(index + 1);
        }
    }

    @Override
    public void moveLast() {
        moveTo(list.size() - 1);
    }

    @Override
    public void moveTo(int rowIndex) {
        if (rowIndex >= 0 && rowIndex < list.size()) {
            index = rowIndex;
            setForm(list.get(index));
        }
    }

    @Override
    public void selectTimeRange() {
        // Không áp dụng cho sản phẩm
    }

    private void loadLoaiHang() {
        cboLoai.setModel(new DefaultComboBoxModel<>(new String[]{"bánh", "nước", "combo"}));
    }

    private void updateButtonStates(boolean isEditing) {
        btnThem.setEnabled(!isEditing);
        btnLamMoi.setEnabled(true);
        btnSua.setEnabled(isEditing);
        btnXoa.setEnabled(isEditing);
    }

    private void initListeners() {
        btnThem.addActionListener(e -> {
            create();
            fillToTable();
        });

        btnSua.addActionListener(e -> {
            update();
            fillToTable();
        });

        btnXoa.addActionListener(e -> {
            delete();
            fillToTable();
        });

        btnLamMoi.addActionListener(e -> {
            clear();
            fillToTable();
        });

        tblSanPham.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 1 && !isCreating) {
                    edit();
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTrangThai;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboLoai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JRadioButton rdoCon;
    private javax.swing.JRadioButton rdoHet;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtTenHang;
    // End of variables declaration//GEN-END:variables

}
